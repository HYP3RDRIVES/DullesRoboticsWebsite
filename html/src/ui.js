// Generated by CoffeeScript 2.3.2
(function() {
  // CoffeeScript - UI

  //File for universal UI
  window.ui = {};

  ui.state = "HOME";

  //Load onecup files
  eval(onecup.import());

  window.SpecialText = (function() {
    class SpecialText {
      
      //Constructor for controlled text
      constructor(type, text) {
        this.type = type;
        this.text = text;
      }

    };

    SpecialText.type = "Raw";

    SpecialText.text = "Text";

    return SpecialText;

  }).call(this);

  
  //Convert raw text into special text  
  //Special Characters: 
  //<!Break>[Text]<!>  --> Creates new line  
  ui.spliceText = function(text) {
    var breakPoints, foundEnd, i, index, j, k, l, lastIndex, len, m, n, o, p, q, ref, ref1, ref2, ref3, ref4, splicedText, stack, tempArray, textArray, textRef;
    textArray = [];
    tempArray = [];
    stack = [];
    breakPoints = [];
//Search text for special characters
//Check for <! first
    for (i = l = ref = text.length - 1; (ref <= 0 ? l <= 0 : l >= 0); i = ref <= 0 ? ++l : --l) {
      if (text.substring(i, i + 2) === "!>") {
        stack.push(i);
      }
    }
//Check for !> last using a stack
    for (i = m = ref1 = stack.length - 1; (ref1 <= 0 ? m <= 0 : m >= 0); i = ref1 <= 0 ? ++m : --m) {
      foundEnd = false;
      index = stack[i];
      for (j = n = ref2 = index - 2; (ref2 <= 0 ? n <= 0 : n >= 0); j = ref2 <= 0 ? ++n : --n) {
        if (text.substring(j, j + 2) === "<!") {
          foundEnd = true;
//Since we are cutting out a string, change the indices in the stack to match the new string
          for (k = o = ref3 = i - 1; (ref3 <= 0 ? o <= 0 : o >= 0); k = ref3 <= 0 ? ++o : --o) {
            stack[k] -= index - j + 2;
          }
          tempArray.push(text.substring(j + 2, index - 1));
          text = text.substring(0, j) + text.substring(index + 2, text.length);
          breakPoints.push(j);
          //console.log("Adding break point at: "+j)
          //We already found the tag for the one in the stack, break the loop now to not cut the tag again
          break;
        }
      }
      if (!foundEnd) {
        break;
      }
    }
    lastIndex = 0;
    for (i = p = 0, ref4 = breakPoints.length - 1; (0 <= ref4 ? p <= ref4 : p >= ref4); i = 0 <= ref4 ? ++p : --p) {
      index = breakPoints[i];
      textArray.push(text.substring(lastIndex, index));
      textArray.push(tempArray[i]);
      lastIndex = breakPoints[i];
    }
    if (text !== "") {
      textArray.push(text.substring(lastIndex, text.length));
    }
    splicedText = [];
    for (textRef = q = 0, len = textArray.length; q < len; textRef = ++q) {
      text = textArray[textRef];
      if (text.indexOf("Break>") !== -1) {
        text = text.substring(6, text.length);
        splicedText.push(new SpecialText("Break", text));
      } else {
        splicedText.push(new SpecialText("Raw", text));
      }
    }
    //console.log(splicedText)
    return splicedText;
  };

  
  //UI Navigation Function 
  ui.nav = function() {
    var navBorderLength, navWidth;
    navWidth = window.innerWidth - 30;
    navBorderLength = 12;
    return div(".navBar", function() {
      width(navWidth);
      position("relative");
      top("10px");
      margin("auto");
      height("120px");
      //Website Title
      div(function() {
        position("relative");
        font_family("Impact");
        margin("auto");
        text_align("center");
        text("DULLES ROBOTICS");
        return font_size("24px");
      });
      //HOME BUTTON
      div(".navButton", function() {
        left(25);
        if (ui.state === "HOME") {
          box_shadow("0 0 0 4px #ffb3b3, 0 0 0 6px hsl(0, 100%, 50%)");
          text_shadow("0 0 10px #FF0000;");
        }
        onclick(function() {
          onecup.goto("HOME.html");
          return ui.state = "HOME";
        });
        return text("HOME");
      });
      //ABOUT Button
      div(".navButton", function() {
        left((0.50695 * window.innerWidth - 84.4479 + 25) / 3);
        if (ui.state === "ABOUT") {
          box_shadow("0 0 0 4px #ffb3b3, 0 0 0 6px hsl(0, 100%, 50%)");
          text_shadow("0 0 10px #FF0000;");
        }
        onclick(function() {
          onecup.goto("ABOUT.html");
          return ui.state = "ABOUT";
        });
        return text("ABOUT");
      });
      //BLOG BUTTON
      div(".navButton", function() {
        left(2 * (0.50695 * window.innerWidth - 84.4479 + 25) / 3);
        if (ui.state === "BLOG") {
          box_shadow("0 0 0 4px #ffb3b3, 0 0 0 6px hsl(0, 100%, 50%)");
          text_shadow("0 0 10px #FF0000;");
        }
        onclick(function() {
          onecup.goto("BLOG.html");
          return ui.state = "BLOG";
        });
        return text("BLOG");
      });
      //MEDIA BUTTON
      div(".navButton", function() {
        left(0.50695 * window.innerWidth - 84.4479);
        if (ui.state === "MEDIA") {
          box_shadow("0 0 0 4px #ffb3b3, 0 0 0 6px hsl(0, 100%, 50%)");
          text_shadow("0 0 10px #FF0000;");
        }
        onclick(function() {
          onecup.goto("MEDIA.html");
          return ui.state = "MEDIA";
        });
        return text("MEDIA");
      });
      //DOCUMENTS BUTTON
      div(".navButton", function() {
        left((window.innerWidth - 170 - (0.50695 * window.innerWidth - 84.4479)) / 3 + 0.50695 * window.innerWidth - 84.4479);
        if (ui.state === "DOCUMENTS") {
          box_shadow("0 0 0 4px #ffb3b3, 0 0 0 6px hsl(0, 100%, 50%)");
          text_shadow("0 0 10px #FF0000;");
        }
        onclick(function() {
          onecup.goto("DOCUMENTS.html");
          return ui.state = "DOCUEMENTS";
        });
        return text("DOCUMENTS");
      });
      //CONTACT BUTTON
      div(".navButton", function() {
        left(2 * (window.innerWidth - 170 - (0.50695 * window.innerWidth - 84.4479)) / 3 + 0.50695 * window.innerWidth - 84.4479);
        if (ui.state === "CONTACT") {
          box_shadow("0 0 0 4px #ffb3b3, 0 0 0 6px hsl(0, 100%, 50%)");
          text_shadow("0 0 10px #FF0000;");
        }
        onclick(function() {
          onecup.goto("CONTACT.html");
          return ui.state = "CONTACT";
        });
        return text("CONTACT");
      });
      //MORE Button
      return div(".navButton", function() {
        left(window.innerWidth - 170);
        if (ui.state === "MORE") {
          box_shadow("0 0 0 4px #ffb3b3, 0 0 0 6px hsl(0, 100%, 50%)");
          text_shadow("0 0 10px #FF0000;");
        }
        onclick(function() {
          onecup.goto("MORE.html");
          return ui.state = "MORE";
        });
        return text("MORE");
      });
    });
  };

  
  //Main UI Function
  ui.main = function() {
    //Background image
    img({
      src: "imgs/sitebg.png",
      width: window.innerWidth,
      height: window.innerHeight
    }, function() {
      position("absolute");
      background_size("100% 100%");
      display("block");
      top("0");
      return overflow("hidden");
    });
    //margin_left "0"
    //margin_right "0"
    //Main Div
    div(function() {
      position("relative");
      width(window.innerWidth);
      height(window.innerHeight);
      overflow_y("auto");
      ui.nav();
      switch (ui.state) {
        case "HOME":
          ui.home();
          break;
        case "ABOUT":
          ui.about();
          break;
        case "BLOG":
          ui.blogging();
          break;
      }
    });
    return onecup.refresh();
  };

}).call(this);
